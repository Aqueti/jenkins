#!/usr/bin/env groovy

pipeline { 
   environment {
      cur_dir = pwd()      
   }

   agent any
   stages {
      stage('Acos\nCheckout&Build') {
         steps {
            echo "Acos build"

            checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'f8369ff8-0a35-4fb9-ac05-b1638c8f1385', url: 'https://github.com/Aqueti/acos.git']]])
         
            sh "mkdir -p build/acos"
            dir('build/acos') {
               sh "cmake ../.. -DBUILD_API:BOOL=ON -DBUILD_AGT:BOOL=ON -DBUILD_APPLICATIONS:BOOL=ON -DBUILD_TESTS:BOOL=OFF -DBUILD_DEB_PACKAGE:BOOL=ON -DDOXYGEN_DIR:STRING=~/Documentation -DBUILD_AUTOFOCUS:BOOL=ON -DBUILD_OPENCV:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DVERSION_TAG=${env.BRANCH_NAME} -DUSE_HTTPS:BOOL=OFF"
               sh "make -j"
            }
            
            dir('build/acos') {
                dir('INSTALL/deb') {                
                   sh 'scp ./*$BRANCH_NAME.deb jenkins@10.0.0.166:./deb'
                }  
    
                dir('applications-prefix/src/applications-build/') {
                   sh "make package"
                   sh 'scp ./*$BRANCH_NAME.deb jenkins@10.0.0.166:./deb'
                }
    
                dir('agt-prefix/src/agt-build/') {
                   sh "make package"
                   sh 'scp ./*$BRANCH_NAME.deb jenkins@10.0.0.166:./deb'
                }
            }
         }
      }

      stage('Tegra\nCheckout&Build') {
          agent { label 'tegra_compiler_3' }
          steps {
            echo "Tegra build"
            
            checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'f8369ff8-0a35-4fb9-ac05-b1638c8f1385', url: 'https://github.com/Aqueti/acos.git']]])

            sh "mkdir -p build/acos"
            dir('build/acos') {
               sh "cmake ../.. -DBUILD_API:BOOL=OFF -DBUILD_ACI:BOOL=ON -DBUILD_AGT:BOOL=OFF -DBUILD_APPLICATIONS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_DEB_PACKAGE:BOOL=ON -DDOXYGEN_DIR:STRING=~/Documentation -DBUILD_AUTOFOCUS:BOOL=OFF -DBUILD_OPENCV:BOOL=OFF -DVERSION_TAG=${env.BRANCH_NAME} -DUSE_HTTPS:BOOL=OFF"
               sh "make -j5"
            }
            
            dir('build/acos') {
                dir('aci-prefix/src/aci-build') {
                   sh 'scp ./*$BRANCH_NAME.deb jenkins@10.0.0.166:./deb'
                }
            }
         }
      }

      stage('Intallation') {
         agent { label 'cam_server_1' }
         steps {                 
            echo "Intallation"
            
            sh '/home/jenkins/install.sh'
         }
      }

      stage('Tests\nCheckout&Build') {
         agent { label 'cam_server_1' }
         steps {                 
            echo "Build tests"

            checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'f8369ff8-0a35-4fb9-ac05-b1638c8f1385', url: 'https://github.com/Aqueti/jenkins.git']]])
         
            dir("testScripts/apitest/") {
               sh "cmake ."
               sh "make -j"
            }
         }
      }

      stage('Run tests') {
         agent { label 'cam_server_1' }
         steps {
            echo "Run tests"
            
            sh '/home/jenkins/run.sh'           
         }
      }
   }

   post { 
      always {      
         junit '**/results.xml'
     
         deleteDir()
      }
   }
 /*   
      success {       
         emailext(
            recipientProviders: [[$class: 'DevelopersRecipientProvider']],
            to: "astepenko@aqueti.com", 
            subject: "Build ${BUILD_NUMBER} for the ${BRANCH_NAME} branch passed.",
            body: "Successfully built acos branch ${BRANCH_NAME} build number ${BUILD_NUMBER}. Packages should be available at http://10.0.0.10/repositories/${BRANCH_NAME}/${BUILD_NUMBER}/index.html"
         )
      }

      failure {
         sh " echo Sending failure e-mail"
         emailext (
            recipientProviders: [[$class: 'CulpritsRecipientProvider']],
            to: "astepenko@aqueti.com",
            subject: 'FAILURE: build ${BUILD_NUMBER} of  ACOS branch ${BRANCH_NAME}',
            body: 'Failed to build acos branch ${BRANCH_NAME} build number ${BUILD_NUMBER}.')
     }
   }
 */
}
